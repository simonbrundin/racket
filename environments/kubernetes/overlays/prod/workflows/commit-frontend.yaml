apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: commit
spec:
  template:
    serviceAccountName: argo-workflow
  dependencies:
    - name: push
      eventSourceName: github
      eventName: with-api-credentials
      filters:
        data:
          - path: headers.X-Github-Event
            type: string
            value: ["push"]
          - path: body.repository.full_name
            type: string
            value: ["simonbrundin/racket"]
    - name: backend
      eventSourceName: github
      eventName: with-api-credentials
      filters:
        dataLogicalOperator: "or"
        data:
          - path: '[body.commits.#.modified.#(%"*backend*")#,body.commits.#.added.#(%"*backend*")#,body.commits.#.removed.#(%"*backend*")#]'
            type: string
            value:
              - "(\\bbackend/*)"

  triggers:
    - template:
        name: argo-workflow-trigger
        argoWorkflow:
          operation: submit
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: commit-stage-
                namespace: argo-events
              spec:
                entrypoint: entrypoint
                arguments:
                  parameters:
                    - name: repo-url
                      value: "github.com/simonbrundin/racket.git"
                    - name: git-commit
                      value: ""
                    - name: github-token
                      value: "ditt-github-token"
                    - name: repo-owner
                      value: "simonbrundin"
                    - name: repo-name
                      value: "racket"
                    - name: image-registry
                      value: "ghcr.io/{{workflow.parameters.repo-owner}}"
                    # testssd
                # volumeClaimTemplates: # define volume, same syntax as k8s Pod spec
                #   - metadata:
                #       name: repo # name of volume claim
                #     spec:
                #       accessModes: ["ReadWriteMany"]
                #       resources:
                #         requests:
                #           storage: 2Gi
                volumes:
                  - name: repo
                    persistentVolumeClaim:
                      claimName: repo
                # volumes:
                #   - name: repo
                #     emptyDir: {}
                templates:
                  - name: entrypoint
                    dag:
                      tasks:
                        # - name: clone-repo
                        #   templateRef:
                        #     name: commit-stage-template
                        #     template: clone-repo
                        #     clusterScope: true
                        - name: backend
                          templateRef:
                            name: commit-stage-template
                            template: backend
                            clusterScope: true
                          arguments:
                            parameters:
                              - name: repo-owner
                                value: "{{workflow.parameters.repo-owner}}"
                              - name: repo-name
                                value: "{{workflow.parameters.repo-name}}"
                              - name: repo-url
                                value: "{{workflow.parameters.repo-url}}"
                              - name: git-commit
                                value: "{{workflow.parameters.git-commit}}"
                              - name: github-token
                                value: "{{workflow.parameters.github-token}}"

                    # steps: # You should only reference external "templates" in a "steps" or "dag" "template".
                    #   - - name: start
                    #       templateRef:
                    #         name: commit-stage-template
                    #         template: clone-repo
                    #         clusterScope: true
                    #       arguments:
                    #         parameters:
                    #           - name: repo-name
                    #             value: "{{workflow.parameters.repo-name}}"
                    #           - name: repo-url
                    #             value: "{{workflow.parameters.repo-url}}"
                    #           - name: github-token
                    #             value: "{{workflow.parameters.github-token}}"
                    #           - name: git-commit
                    #             value: "{{workflow.parameters.git-commit}}"
      parameters:
        - src:
            dependencyName: push
            dataKey: body.head_commit.id
          dest: spec.arguments.parameters.git-commit.value
          # aaaaaaa
